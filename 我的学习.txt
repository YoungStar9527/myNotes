如果你刚入班不久，计划的是1年内要跳槽，恭喜你！因为准备时间实在太充裕了。



首先，这个学习计划的条件里有一条是“工作履历中有公司自有产品的项目经验”，意思就是说，你不是一直在外包公司里做各种极为low的项目，而是做过公司自有产品的经验，这个自有产品，可以是面向C端的，也可以是面向B端的，都可以，只要不是外包就是好事儿。



对于这种情况而言，建议你先暂时跳过《阶段一 从 0 到 1：开发 10 万行代码量的大型电商系统》，注意，我说的是暂时，暂时，暂时！重要的事情说三遍！暂时你不用学阶段一的内容。





然后，建议你两条腿走路，按下面两条技术路线齐头并进去推进自己的技术成长。



第一条线，就是你可以利用平时在公司里工作的时间，平时工作间隙中休息的碎片化时时间，突击把儒猿技术窝的所有专栏都看一遍，包括但是不限于面试突击一二三季、jvm、mysql、消息中间件、微服务、缓存、rocketmq实战专栏，等等，儒猿技术窝里后续还会继续推出并发、spring等等互联网常规技术的专栏，涵盖各种技术的初中级内容以及小型实战项目，基本上能搞定小公司面试了



如果后续儒猿技术窝的专栏越来越多了，建议你自己自行选择，根据自己的技术薄弱项，重点把技术薄弱的地位通过专栏去补充掉



另外就是项目问题，你需要通过如猿技术窝的缓存专栏里的实战案例，rocketmq实战专栏里的小实战项目里的技术方案，通过对他们的学习，把这些技术方案塞到你自己的项目里去



基本上通过儒猿技术窝的专栏学习，你基本可以补足技术薄弱项，项目亮点也差不多能学到一些，后续可以在跳槽指导的时候，包装到自己的项目里去，这样整体你的学习是足够了



那假设你在这之前，已经是儒猿技术窝的深度用户，把部分专栏看过了，那我建议你是一方面把看过的专栏都复习一下，自己写一些笔记梳理，画一些原理图，做思维导图，另外一方面是如果儒猿技术窝有没看过的专栏，可以补一下，完善自己的技术栈



除了上面对儒猿技术窝的学习之外，你因为规划的准备时间比较充裕，建议你把我之前讲过的《亿级流量电商详情页系统》《Elasticsearch顶尖高手系列》，这两个课可以重点看一下，因为一方面亿级流量课程你看了可以包装到自己的项目里去，一方面是ES是面试重点，建议你可以好好看一下









把上述学习内容完成之后，从技术层面而言，你的技术上基本没太大的短板，项目而言，儒猿的实战专栏和亿级流量的内容包装到你的项目里去，项目基本有亮点可言了，上述内容肯定是你在6个月内利用工作中的碎片化时间可以慢慢看完的



什么？你说你之前就是儒猿技术窝的深度用户，而且还把我早期的亿级流量和ES的课都学过？恭喜你，那你技术肯定弱不了，建议你按照上述建议，查漏补缺，没学的都学一下，学过的复习一下，后续在小公司里跳槽涨薪，肯定没问题！



第二条线，架构班技术线，架构班这块，在1年时间里，建议你重点击破的是两大块技术内容，第一是《阶段二 重构：电商系统的分布式架构实战》，这个里面包含了spring cloud netflix源码剖析，分布式事务框架源码剖析，分布式锁框架源码剖析，还有分布式电商系统的架构实践，基本学完了以后，分布式业务系统的架构，你是完全精通了



但是这里要给大家提醒一点，那就是这个课程不仅仅是教会你一堆技术，而是重点剖析了分布式领域中的一些框架的源码，通过源码剖析，交给你的是分布式系统的架构设计、思想原理，过程中重点教会你的是源码分析的技巧和方法，交给你的是自己去分析源码的能力，这些东西都是属于通用的能力。



因此早期录制课程的时候，都是基于spring cloud netflix技术栈、bytetcc分布式事务框架，等技术来分析源码的，就技术而言，放在现在确实是比较旧了，但是你要明白的是，那些技术仅仅是一个载体，通过分析他们的源码去交给你的是架构设计、思想原理、方案机制、内核机制，以及分析源码的方法、技巧和能力。



所以如果你能够踏踏实实的用至少3个月以上的时间，去掌握阶段二，在这个过程中，踏踏实实的跟着源码分析课走，看视频的时候别图快，看一点视频暂停一下，自己动手调试一下源码，写一些注释，接着继续往下看视频，以此类推，看完一个视频后，自己记录笔记，画源码架构图，看完一个课以后梳理思维导图，平时还多复习，用这种方式踏踏实实的吃透这个阶段，你会发现你突然功力大增。



首先是对分布式业务系统的架构设计、思想原理、方案机制、内核机制，都有一个清晰的认识，其次是你掌握了源码分析的技巧、方法和能力，你突然发现自己也可以去看其他技术的源码了。



当你吃透这个阶段的内容后，建议你可以针对分布式业务架构当前最新的一些流行热门技术，比如说spring cloud alibaba技术栈，可以把里面的各个组件重点去看看源码，自己学习一下，自己翻新一下这块技术栈，你就成功了！



实际上我们的课程已经把能力都交给你了，如果你还是做不到上述自己翻新自己技术栈的话，说明我们的课程，你没吃透，能力没积累到位，建议你回炉过去，重新看，重新积累自己的能力！



接着，用同样的方法，我们建议你把《阶段五 复杂业务场景下的系统设计实践》给学了，这个过程可能需要几个月的时间才行，这里包括了JDK源码，spring boot、tomcat、spring、spring mvc、mybatis、dubbo源码系列，还有DDD领域驱动模型设计，等内容。



再有是我们的大数据技术训练营里的kafka和zk两块源码剖析的内容，都是出去面试的大杀器！也建议搞透他。还有《阶段八 每秒数十万高并发的系统架构设计》中的秒杀系统架构设计以及云平台实践的内容，都可以学完。



上述内容都学完之后，你通过儒猿技术窝+亿级流量+ES，构建起来了技术广度，然后架构班的上述几块内容提供给了你技术深度以及能力提升，接着儒猿技术窝的实战专栏、亿级流量电商详情页架构设计、秒杀架构设计、DDD领域驱动模型设计可以给你的项目增加技术亮点，到此为止，你这准备就差不多了。



如果你学有余力，甚至可以把中间件架构中的自研海量小文件存储系统、自研IM系统、自研微服务注册中心，这些项目给学完，那对你的面试项目经验而言，会更加的有好处！



然后，可以通过系统走跳槽指导，进行简历指导、项目拷问、投递指导、内推资源、面试指导、offer指导，在这种情况下，其实你有一定的概率可以直接进大厂，有很大的概率可以进独角兽，至于小公司跳槽涨薪那是很轻松的了。



附录课程内容：
1、《从0 开始带你成为JVM实战高手》

2、《从零开始带你成为MySQL实战优化高手》

3、《从0 开始带你成为消息中间件实战高手》和《基于RocketMQ的互联网酒店预订系统项目实战》

4、《互联网Java工程师面试突击一二三季》

5、《石杉的架构笔记pdf》（公众号石杉的架构笔记回复PDF获取）

6、《亿级流量电商详情页系统实战》

链接：https://pan.baidu.com/s/1KAAYSKwYjGPVpIruKTjcTw

提取码：l472

7、《Elasticsearch顶尖高手系列课程》

链接：https://pan.baidu.com/s/1v__988y7SXUcHokL6hAWZA

提取码：lrek



8、互联网Java架构师训练营》 第二阶段：电商系统的分布式架构实战 01_Spring Cloud从0基础入门到精通核心组件源码《互联网Java架构师训练营》

9、第二阶段：电商系统的分布式架构实战 03_多场景下的企业级分布式事务技术深入底层剖析

10、《互联网Java架构师训练营》 第二阶段：电商系统的分布式架构实战 05_多种开源技术实现的企业级分布式锁源码剖析



11、《互联网Java架构师训练营》 第五阶段：复杂业务场景下的系统设计实践 01_精通基础开发技术之JDK集合包源码剖析

12、《互联网Java架构师训练营》 第五阶段：复杂业务场景下的系统设计实践 01_精通基础开发技术之JDK并发包源码剖析以及真实生产案例实战

13、《互联网Java架构师训练营》 第五阶段：复杂业务场景下的系统设计实践 01_精通基础开发技术之讲给Java工程师听的大白话网络课程

14、《互联网Java架构师训练营》 第五阶段：复杂业务场景下的系统设计实践 01_精通基础开发技术之Java NIO技术精讲以及原理剖析

15、《互联网Java架构师训练营》 第五阶段：复杂业务场景下的系统设计实践 01_精通基础开发技术之Netty技术精讲以及源码剖析



16、《互联网中间件架构师实战训练营》 第三阶段：基础架构体系中的技术中台设计与研发 01_自研分布式海量小文件存储系统

17、《互联网Java架构师训练营》 第八阶段：每秒数十万高并发的系统架构设计 06_互联网顶级大厂的超高并发秒杀系统架构设计

18、《互联网Java架构师训练营》 第五阶段：复杂业务场景下的系统设计实践 3、专治复杂业务场景的领域驱动模型设计

19、《互联网Java架构师训练营》 第五阶段：复杂业务场景下的系统设计实践 02_精通核心开源开发框架

20、 第二阶段：百万级吞吐的消息中间件架构剖析 01_支撑每日10亿数据量的Kafka架构实战

21、 第二阶段：百万级吞吐的消息中间件架构剖析 02_探索世界上最复杂的消息系统：Kafka内核源码分析

22、 第三阶段：大规模分布式系统协调中间件的架构剖析 01_ZooKeeper顶尖高手课程：从实战到源码

还有时间：

23、《互联网中间件架构师实战训练营》 第三阶段：基础架构体系中的技术中台设计与研发 02_自研企业级分布式IM即时通讯系统

24、《互联网中间件架构师实战训练营》 第二阶段：企业级微服务技术体系的自主研发 01_自研企业级微服务技术栈框架